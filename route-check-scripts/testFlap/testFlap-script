# This script is using another two scripts to send messages over telegram:
## TelegramWAN1-script and TelegramWAN2-script
## Those script are in charge to send Message to Telegram Users or groups.

:global WAN1gw;
:global newWAN1gw;
:global WAN2gw;
:global newWAN2gw;
:global WAN1count;
:global WAN2count;

# Find the route in use for both services at this moment. There is a catch because it can fail if no active route is detected.
:do {[:set $newWAN1gw [:ip route get [:ip route find where active and comment~"WAN1 - Ruta Default Mark"] gateway]]} on-error={
  :log warning "WAN1 sin Rutas activas, desactivar este comentario es muy molesto"
  :set $newWAN1gw "Not Running"
}
:do {[:set $newWAN2gw [:ip route get [:ip route find where active and comment~"WAN2 - Ruta Default Mark"] gateway]]} on-error={
  :log warning "WAN2 sin Rutas activas, desactivar este comentario es muy molesto";
  :set $newWAN1gw "Not Running"
}


# local var for get unix time and use it to limit spam messages
:local datetime2epoch do={
    :local dtime [:tostr $1]
    /system clock
    :local cyear [get date] ; :if ($cyear ~ "....-..-..") do={:set cyear [:pick $cyear 0 4]} else={:set cyear [:pick $cyear 7 11]}
    :if (([:len $dtime] = 10) or ([:len $dtime] = 11)) do={:set dtime "$dtime 00:00:00"}
    :if ([:len $dtime] = 15) do={:set dtime "$[:pick $dtime 0 6]/$cyear $[:pick $dtime 7 15]"}
    :if ([:len $dtime] = 14) do={:set dtime "$cyear-$[:pick $dtime 0 5] $[:pick $dtime 6 14]"}
    :if ([:len $dtime] =  8) do={:set dtime "$[get date] $dtime"}
    :if ([:tostr $1] = "") do={:set dtime ("$[get date] $[get time]")}
    :local vdate [:pick $dtime 0 [:find $dtime " " -1]]
    :local vtime [:pick $dtime ([:find $dtime " " -1] + 1) [:len $dtime]]
    :local vgmt  [get gmt-offset]; :if ($vgmt > 0x7FFFFFFF) do={:set vgmt ($vgmt - 0x100000000)}
    :if ($vgmt < 0) do={:set vgmt ($vgmt * -1)}
    :local arrm  [:toarray "0,0,31,59,90,120,151,181,212,243,273,304,334"]
    :local vdoff [:toarray "0,4,5,7,8,10"]
    :local MM    [:pick $vdate ($vdoff->2) ($vdoff->3)]
    :local M     [:tonum $MM]
    :if ($vdate ~ ".../../....") do={
        :set vdoff [:toarray "7,11,1,3,4,6"]
        :set M     ([:find "xxanebarprayunulugepctovecANEBARPRAYUNULUGEPCTOVEC" [:pick $vdate ($vdoff->2) ($vdoff->3)] -1] / 2)
        :if ($M>12) do={:set M ($M - 12)}
    }
    :local yyyy  [:pick $vdate ($vdoff->0) ($vdoff->1)] ; :if ((($yyyy - 1968) % 4) = 0) do={:set ($arrm->1) -1; :set ($arrm->2) 30}
    :local totd  ((($yyyy - 1970) * 365) + (($yyyy - 1968) / 4) + ($arrm->$M) + ([:pick $vdate ($vdoff->4) ($vdoff->5)] - 1))
    :return      (((((($totd * 24) + [:pick $vtime 0 2]) * 60) + [:pick $vtime 3 5]) * 60) + [:pick $vtime 6 8] - $vgmt)
}



:if ( $newWAN1gw != $WAN1gw ) do={
    :local msg;
    :global now;
    :set $now [$datetime2epoch];
    :set $msg "Se detecto cambio de ruta para WAN1";
    :set $WAN1gw $newWAN1gw;
    :log info $msg;
    :local LOG;
    :set $LOG [:log find where message=$msg and time>([:system clock get time] - 10m )];
    :if (([:len $LOG] > 5) and ($now > ($WAN1msgTime + 86400)) ) do={ 
      :log info "Se presentaron 5 cambios en los ultimos 10 Minutos en WAN1, se envia mensaje de Telegram"; 
      :system script run TelegramWAN1
      # Defino el horario de envio de mensaje para no spammear
      :set WAN1msgTime [$datetime2epoch];
    }
}


# Mejoras pendientes:
# 1. Dar aviso solo de 9 a 18
# 2. enviar metricas a Zabbix ? como para poder saber por lo menos que metrica esta activa
# 3. Solo reviso la distancia mas baja que esta activa para esa WAN y que tiene marca
